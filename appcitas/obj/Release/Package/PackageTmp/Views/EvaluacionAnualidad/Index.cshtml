@model appcitas.Dtos.AnualidadDto

@{
    ViewBag.Title = "Evaluacion de Anualidades";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">

    .miPanel {
        overflow-x: auto;
        border-top: 2px solid rgb(230,230,230);
        height: 400px;
        max-height: 600px;
    }

    .miPanelResultado {
        overflow-x: auto;
        border-top: 2px solid rgb(230,230,230);
        height: 300px;
        max-height: 600px;
    }
</style>

<div class="box bac">
    <div class="box-header">
        <h3 class="titulo">Evaluacion de Anualidades - Motor de Retenciones</h3>
        <div class="row nomargin">
        </div>
    </div>
    <div class="box-body">
        <form id="AnualidadEvalForm">
            @Html.AntiForgeryToken()

            <div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row">

                            <input class="hidden" id="Clasificacion" />

                            <div class="form-group col-md-3">
                                @Html.LabelFor(model => model.Identidad, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Identidad, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Identidad, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-3">
                                @Html.LabelFor(model => model.NumeroTarjeta, htmlAttributes: new { @class = "control-label" })
                                <div class="input-group">
                                    @Html.EditorFor(model => model.NumeroTarjeta, new { htmlAttributes = new { @class = "form-control" } })
                                    <span class="input-group-btn">
                                        <button class="btn btn-default" type="button" onclick="BuscarPorTarjeta(event)"><i class="fa fa-search"></i></button>
                                    </span>
                                </div>
                            </div>
                            <div class="form-group col-md-3">
                                @Html.LabelFor(model => model.NumeroCuenta, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.NumeroCuenta, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.NumeroCuenta, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-md-3">
                                @Html.LabelFor(model => model.CIF, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.CIF, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.CIF, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group col-md-3">
                                @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Fecha, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-3 form-group">
                                @Html.LabelFor(model => model.Familia, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Familia, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Familia, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-3 form-group">
                                @Html.LabelFor(model => model.Segmento, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Segmento, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Segmento, "", new { @class = "text-danger" })
                            </div>
                            @Html.EditorFor(model => model.SegmentoId, new { htmlAttributes = new { @class = "hidden" } })
                            <div class="col-md-3 form-group">
                                @Html.LabelFor(model => model.Marca, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Marca, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Marca, "", new { @class = "text-danger" })
                            </div>
                            @Html.EditorFor(model => model.MarcaId, new { htmlAttributes = new { @class = "hidden" } })
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.TipoAnualidadId, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(model => model.TipoAnualidadId, new SelectList(ViewBag.TipoDeAnualidades, "ConfigItemID", "ConfigItemAbreviatura"), "Seleccione un tipo de anualidad", new { @class = "form-control", @onChange = "TipoAnualidadOnChange(event)" })
                                    @Html.ValidationMessageFor(model => model.TipoAnualidadId, "", new { @class = "text-danger" })
                                </div>
                                @Html.EditorFor(model => model.TipoAnualidad, new { htmlAttributes = new { @class = "hidden" } })
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Monto, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Monto, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Monto, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.FechaDeCargo, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.FechaDeCargo, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FechaDeCargo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SaldoActual, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.SaldoActual, new { htmlAttributes = new { @class = "form-control webservice", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.SaldoActual, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Limite, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Limite, new { htmlAttributes = new { @class = "form-control webservice", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Limite, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <button type="button" onclick="EvaluarVariables(event)" class="btn btn-primary">Evaluar Variables</button>
                    </div>
                </div>
                <br />
            </div>
        </form>

        <div class="row">
            <div class="col-md-8">
                <div class="panel panel-default miPanel">
                    <div class="panel-heading">
                        <strong>Resultados de Variables</strong>
                    </div>
                    <div class="panel-body">
                        <table id="resultadosDeVariables" class="list-table table table-bordered">
                            <thead>
                                <tr>
                                    <th class="hidden">Codigo</th>
                                    <th class="hidden">ReclamoId</th>
                                    <th class="hidden">ItemId</th>
                                    <th>Item</th>
                                    <th class="hidden">VariableDeItemId</th>
                                    <th>Variable</th>
                                    <th>Valor </th>
                                    <th>Condicion</th>
                                    <th>Valor Comparativo</th>
                                    <th class="hidden">ResultadoBooleano</th>
                                    <th>Resultado</th>
                                </tr>
                            </thead>
                            <tbody class="dataTables_fontTbody"></tbody>
                        </table>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <strong>Resultados de Evaluacion</strong>
                    </div>
                    <div class="panel-body miPanelResultado">
                        <div id="resultadosContainer">

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Observacion, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Observacion, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="panel-footer">
                        <button class="btn btn-primary" type="button" onclick="GuardarAnualidad(event)"> Guardar Evaluacion</button>
                        <input type="reset" class="btn btn-default" value="Resetear Formulario" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts{
    @Scripts.Render("~/Scripts/js/Anualidad.js")
}
